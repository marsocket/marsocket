#!/bin/sh
#
# Copyright (C) 2019 marsocket <marsocket@gmail.com>
# This is free software, licensed under the GNU General Public License v3.

usage() {
	cat <<-EOF
		Usage: "$0" [options]
		Valid options are:
            -h, --help    Show this help message and exit
            -f, --gfwlist-file <FILE>
                          Local gfwlist file by base64
                          (If not given, will be downloaded online.)
            -d, --dns <dns_ip>
                          DNS IP address for the GfwList Domains (Default: 127.0.0.1)	                
            -p, --port <local_dns_port>
                          Local DNS Port for the GfwList Domains (Default: 5353)
            -s, --ipset <ipset_name>
                          Ipset name for the GfwList domains
                          (If not given, ipset rules will not be generated.)
            -o, --output-file <FILE> 
                          Filename of output
                --download
                          Download gfwlist from github.com.
                          Need --output-file
EOF
	exit $1
}

get_args() {
    GFWLIST_BASE64_FILE=""
    DNS_IP="127.0.0.1"
    DNS_PORT="5353"
    IPSET_NAME=""
	OUTPUT_FILE=""
	DOWNLOAD=""
    while [ ${#} -gt 0 ]; do
        case "${1}" in
            --help | -h | -v)
                usage 0
                ;;
			--download)
				DOWNLOAD="1"		
				;;
            --gfwlist-file | -f)
                GFWLIST_BASE64_FILE=$2
                shift
                ;;
            --dns | -d)
                DNS_IP="$2"
                shift
                ;;                
            --port | -p)
                DNS_PORT="$2"
                shift
                ;;
            --ipset | -s)
                IPSET_NAME="$2"
                shift
                ;;
            --output-file | -o)
                OUTPUT_FILE="$2"
                shift
                ;;
            *)
                echo "Invalid argument: $1"
                usage 1
                ;;
        esac
        shift 1
    done

	[ ! -d "$OUTPUT_FILE" ] || usage 1
	[ -d $(dirname "$OUTPUT_FILE") ] || usage 1
}

log() {
	local logtext=$1
	local logtime=$(date "+%Y-%m-%d %H:%M:%S")
	echo "[${logtime}] ${logtext}"
}

download_file() {
	local url=$1
	local latest_file=$2
	local logtext=$3
	local tmpfile=$(mktemp /tmp/download_file.XXXXXX)
	log "$logtext"
	curl -s -L --insecure -o $tmpfile $url
	if [ $? -ne 0 ]; then
		log "Updating failed."
		return 1	
	fi
	local new_md5=$(md5sum "$tmpfile" 2>/dev/null | awk '{ print $1 }')
	local old_md5=$(md5sum "$latest_file" 2>/dev/null | awk '{ print $1 }')
	mv "$tmpfile" "$latest_file"
	log "Update completed. md5: ${new_md5}"
	[ "$new_md5" != "$old_md5" ] && /etc/init.d/marsocket reload
	return 0	
}

main() {
    [ -z "$1" ] && usage 0
    get_args "$@"
	if [ -n "$DOWNLOAD" ]; then
		local url="https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt"
		download_file $url $OUTPUT_FILE "Download gfwlist from github.com ..."
	else
		gfwlist2dnsmasq.sh -f "$GFWLIST_BASE64_FILE" -d "$DNS_IP" -p "$DNS_PORT" -s "$IPSET_NAME" -o "$OUTPUT_FILE"
	fi
    [ "$?" == "0" ] || exit 1
    exit 0
}

main "$@"

